[{"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\index.js":"1","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\layout.js":"2","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\indexm.js":"3","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\home.js":"4","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\appContex.js":"5","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-editable\\todo_editable.js":"6","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-simple\\todo_simple.js":"7","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-task.js":"8","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-name.js":"9","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-done.js":"10","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\flux.js":"11","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\index.js":"12","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-m.js":"13","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-task.js":"14"},{"size":272,"mtime":1611513806725,"results":"15","hashOfConfig":"16"},{"size":1020,"mtime":1611614270353,"results":"17","hashOfConfig":"16"},{"size":3543,"mtime":1611520699514,"results":"18","hashOfConfig":"16"},{"size":1312,"mtime":1611613900773,"results":"19","hashOfConfig":"16"},{"size":1353,"mtime":1611516851416,"results":"20","hashOfConfig":"16"},{"size":3967,"mtime":1611520147240,"results":"21","hashOfConfig":"16"},{"size":2429,"mtime":1611515543153,"results":"22","hashOfConfig":"16"},{"size":1053,"mtime":1611515837478,"results":"23","hashOfConfig":"16"},{"size":3989,"mtime":1611515832590,"results":"24","hashOfConfig":"16"},{"size":1677,"mtime":1611513294125,"results":"25","hashOfConfig":"16"},{"size":3994,"mtime":1611615100591,"results":"26","hashOfConfig":"16"},{"size":420,"mtime":1611613777230,"results":"27","hashOfConfig":"16"},{"size":4048,"mtime":1611615999160,"results":"28","hashOfConfig":"16"},{"size":1192,"mtime":1611616007935,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dmsd2t",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\index.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\layout.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\indexm.js",["61","62"],"import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport ListModular from './todolist-name'\r\nimport Task from './todolist-task'\r\n\r\n\r\nconst TodoModular = () => {\r\n    \r\n    const history = useHistory()\r\n\r\n    const [nombre, setNombre] = useState('')\r\n    const [tarea, setTarea] = useState('')\r\n    const [prueba, setPrueba] = useState([])\r\n    const [edit, setEdit] = useState(false)\r\n    const [currentTask, setCurrentTask] = useState({})\r\n    const [workDone, setWorkDone] = useState([])\r\n\r\n    const handleName = (e) => {\r\n        setNombre(e.target.value)\r\n    }\r\n\r\n    const handleTask = (e) => {\r\n        setTarea(e.target.value)\r\n    }\r\n\r\n    const assignment = (e) => {\r\n        e.preventDefault()\r\n        if (edit) {\r\n            const newTasklist = prueba.map((item) => {\r\n                if (item.id === currentTask.id) {\r\n                    const newTask = {\r\n                        id: currentTask.id,\r\n                        name: nombre,\r\n                        task: tarea,\r\n                        date: currentTask.date\r\n                    }\r\n                    return newTask\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n            setPrueba(newTasklist)\r\n            setEdit(false)\r\n            setTarea('')\r\n            setNombre('')\r\n            setCurrentTask({})\r\n        } else {\r\n            const id = new Date().getTime()\r\n            const fecha = new Date()\r\n            console.log(fecha)\r\n            const newTask = {\r\n                id: id,\r\n                name: nombre,\r\n                task: tarea,\r\n                date: fecha.toString()\r\n            }\r\n\r\n            const todolist = prueba.concat(newTask)\r\n            setPrueba(todolist)\r\n            setTarea('')\r\n            setNombre('')\r\n\r\n        }\r\n        history.push('/todolist-modular/todolist-task')\r\n    }\r\n    const deleteTask = (item, isDone) => {\r\n        if (isDone === true) {\r\n            const borrarTrabajo = workDone.filter((tarea) => {\r\n                return tarea !== item\r\n            })\r\n            setWorkDone(borrarTrabajo)\r\n        } else {\r\n            const borrarTarea = prueba.filter((tarea) => {\r\n                return tarea !== item\r\n            })\r\n            setPrueba(borrarTarea)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const setEditTask = (task) => {\r\n        setNombre(task.name)\r\n        setTarea(task.task)\r\n        setEdit(true)\r\n        setCurrentTask(task)\r\n        history.push('/todolist-modular/todolist-name')\r\n\r\n    }\r\n\r\n    const changelist = (item, isChange) => {\r\n        if (isChange === true) {\r\n            deleteTask(item, true)\r\n            const returnTask = prueba.concat(item)\r\n            setPrueba(returnTask)\r\n\r\n        } else {\r\n            deleteTask(item, false)\r\n            const newdone = workDone.concat(item)\r\n            setWorkDone(newdone)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Task\r\n                nombre={nombre}\r\n                tarea={tarea}\r\n                assignment={assignment}\r\n                handleName={handleName}\r\n                handleTask={handleTask}\r\n            />\r\n\r\n            <ListModular\r\n                prueba={prueba}\r\n                deleteTask={deleteTask}\r\n                setEditTask={setEditTask}\r\n                changelist={changelist}\r\n                workDone={workDone}\r\n                changelist={changelist}\r\n                deleteTask={deleteTask}\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoModular\r\n",["63","64"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\home.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\appContex.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-editable\\todo_editable.js",["65"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst TodoEditable = () => {\r\n    const history = useHistory()\r\n\r\n    const [nombre, setNombre] = useState('')\r\n    const [tarea, setTarea] = useState('')\r\n    const [prueba, setPrueba] = useState([])\r\n    const [edit, setEdit] = useState(false)\r\n    const [currentTask, setCurrentTask] = useState({})\r\n\r\n    const handleName = (e) => {\r\n        setNombre(e.target.value)\r\n    }\r\n\r\n    const handleTask = (e) => {\r\n        setTarea(e.target.value)\r\n    }\r\n\r\n    const assignment = (e) => {\r\n        e.preventDefault()\r\n        if (edit) {\r\n            const newTasklist = prueba.map((item) => {\r\n                if (item.id === currentTask.id) {\r\n                    const newTask = {\r\n                        id: currentTask.id,\r\n                        name: nombre,\r\n                        task: tarea\r\n                    }\r\n                    return newTask\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n            setPrueba(newTasklist)\r\n            setEdit(false)\r\n            setTarea('')\r\n            setNombre('')\r\n            setCurrentTask({})\r\n        } else {\r\n            const id = new Date().getTime()\r\n            const newTask = {\r\n                id: id,\r\n                name: nombre,\r\n                task: tarea\r\n            }\r\n\r\n            const todolist = prueba.concat(newTask)\r\n            setPrueba(todolist)\r\n            setTarea('')\r\n            setNombre('')\r\n\r\n        }\r\n\r\n    }\r\n    const deleteTask = (item) => {\r\n        const borrarTarea = prueba.filter((tarea) => {\r\n            return tarea !== item\r\n        })\r\n        setPrueba(borrarTarea)\r\n    }\r\n\r\n    const setEditTask = (task) => {\r\n        setNombre(task.name)\r\n        setTarea(task.task)\r\n        setEdit(true)\r\n        setCurrentTask(task)\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className='container'>\r\n                <h1 className='font-white'>TO DO LIST</h1>\r\n                <div className=\"table table-striped \">\r\n                    <div className='input-add container'>\r\n                        <div>\r\n                            <form onSubmit={assignment}>\r\n                                <input required type=\"text\" className=\"form-control \" placeholder=\"Nombre\" aria-label=\"Recipient's username\" onChange={handleName} value={nombre} />\r\n                                <input required type=\"text\" className=\"form-control \" placeholder=\"Tarea\" aria-label=\"Recipient's username\" onChange={handleTask} value={tarea} />\r\n                                <button type='submit' className=\"btn btn-primary btn-lg btn-block\">Agregar</button>\r\n                            </form>\r\n                        </div>\r\n                        <div>\r\n                            {prueba.map((item) => {\r\n                                return (\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <p>Asignado a {item.name} , Tarea a Realizar {item.task}</p>\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { deleteTask(item) }}>Borrar</button>\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={() => setEditTask(item)}>Editar</button>\r\n\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <Link to='/'>\r\n                            <button type=\"button\" className=\"btn btn-dark\" >Volver</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoEditable","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-simple\\todo_simple.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-task.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-name.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-done.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\flux.js",["66"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\index.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-m.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-task.js",[],{"ruleId":"67","severity":1,"message":"68","line":121,"column":17,"nodeType":"69","endLine":121,"endColumn":40},{"ruleId":"67","severity":1,"message":"68","line":122,"column":17,"nodeType":"69","endLine":122,"endColumn":40},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":11,"nodeType":"76","messageId":"77","endLine":5,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":86,"column":23,"nodeType":"76","messageId":"77","endLine":86,"endColumn":28},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'store' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]