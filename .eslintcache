[{"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\index.js":"1","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\layout.js":"2","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\indexm.js":"3","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\home.js":"4","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\appContex.js":"5","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-editable\\todo_editable.js":"6","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-simple\\todo_simple.js":"7","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-task.js":"8","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-name.js":"9","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-done.js":"10","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\flux.js":"11","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\index.js":"12","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-m.js":"13","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-task.js":"14","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\indexmf.js":"15","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\login.js":"16","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\navbar.js":"17","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\task.js":"18","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\task-list.js":"19"},{"size":272,"mtime":1611513806725,"results":"20","hashOfConfig":"21"},{"size":1181,"mtime":1611960418832,"results":"22","hashOfConfig":"21"},{"size":3541,"mtime":1612127853000,"results":"23","hashOfConfig":"21"},{"size":1462,"mtime":1612121656161,"results":"24","hashOfConfig":"21"},{"size":1353,"mtime":1611516851416,"results":"25","hashOfConfig":"21"},{"size":3967,"mtime":1611520147240,"results":"26","hashOfConfig":"21"},{"size":2429,"mtime":1611515543153,"results":"27","hashOfConfig":"21"},{"size":1053,"mtime":1611515837478,"results":"28","hashOfConfig":"21"},{"size":3989,"mtime":1611515832590,"results":"29","hashOfConfig":"21"},{"size":1677,"mtime":1611513294125,"results":"30","hashOfConfig":"21"},{"size":3994,"mtime":1611792568254,"results":"31","hashOfConfig":"21"},{"size":414,"mtime":1611960327371,"results":"32","hashOfConfig":"21"},{"size":4048,"mtime":1611615999160,"results":"33","hashOfConfig":"21"},{"size":1192,"mtime":1611616007935,"results":"34","hashOfConfig":"21"},{"size":5551,"mtime":1612130128763,"results":"35","hashOfConfig":"21"},{"size":780,"mtime":1611961385458,"results":"36","hashOfConfig":"21"},{"size":312,"mtime":1611961892619,"results":"37","hashOfConfig":"21"},{"size":840,"mtime":1612120964037,"results":"38","hashOfConfig":"21"},{"size":4099,"mtime":1612130131764,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1dmsd2t",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\index.js",[],["83","84"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\layout.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\indexm.js",["85","86"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\home.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\appContex.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-editable\\todo_editable.js",["87"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst TodoEditable = () => {\r\n    const history = useHistory()\r\n\r\n    const [nombre, setNombre] = useState('')\r\n    const [tarea, setTarea] = useState('')\r\n    const [prueba, setPrueba] = useState([])\r\n    const [edit, setEdit] = useState(false)\r\n    const [currentTask, setCurrentTask] = useState({})\r\n\r\n    const handleName = (e) => {\r\n        setNombre(e.target.value)\r\n    }\r\n\r\n    const handleTask = (e) => {\r\n        setTarea(e.target.value)\r\n    }\r\n\r\n    const assignment = (e) => {\r\n        e.preventDefault()\r\n        if (edit) {\r\n            const newTasklist = prueba.map((item) => {\r\n                if (item.id === currentTask.id) {\r\n                    const newTask = {\r\n                        id: currentTask.id,\r\n                        name: nombre,\r\n                        task: tarea\r\n                    }\r\n                    return newTask\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n            setPrueba(newTasklist)\r\n            setEdit(false)\r\n            setTarea('')\r\n            setNombre('')\r\n            setCurrentTask({})\r\n        } else {\r\n            const id = new Date().getTime()\r\n            const newTask = {\r\n                id: id,\r\n                name: nombre,\r\n                task: tarea\r\n            }\r\n\r\n            const todolist = prueba.concat(newTask)\r\n            setPrueba(todolist)\r\n            setTarea('')\r\n            setNombre('')\r\n\r\n        }\r\n\r\n    }\r\n    const deleteTask = (item) => {\r\n        const borrarTarea = prueba.filter((tarea) => {\r\n            return tarea !== item\r\n        })\r\n        setPrueba(borrarTarea)\r\n    }\r\n\r\n    const setEditTask = (task) => {\r\n        setNombre(task.name)\r\n        setTarea(task.task)\r\n        setEdit(true)\r\n        setCurrentTask(task)\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className='container'>\r\n                <h1 className='font-white'>TO DO LIST</h1>\r\n                <div className=\"table table-striped \">\r\n                    <div className='input-add container'>\r\n                        <div>\r\n                            <form onSubmit={assignment}>\r\n                                <input required type=\"text\" className=\"form-control \" placeholder=\"Nombre\" aria-label=\"Recipient's username\" onChange={handleName} value={nombre} />\r\n                                <input required type=\"text\" className=\"form-control \" placeholder=\"Tarea\" aria-label=\"Recipient's username\" onChange={handleTask} value={tarea} />\r\n                                <button type='submit' className=\"btn btn-primary btn-lg btn-block\">Agregar</button>\r\n                            </form>\r\n                        </div>\r\n                        <div>\r\n                            {prueba.map((item) => {\r\n                                return (\r\n                                    <ul class=\"list-group\">\r\n                                        <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <p>Asignado a {item.name} , Tarea a Realizar {item.task}</p>\r\n                                            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { deleteTask(item) }}>Borrar</button>\r\n                                            <button type=\"button\" className=\"btn btn-success\" onClick={() => setEditTask(item)}>Editar</button>\r\n\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <Link to='/'>\r\n                            <button type=\"button\" className=\"btn btn-dark\" >Volver</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoEditable","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-simple\\todo_simple.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-task.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-name.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-modular\\todolist-done.js",[],["88","89"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\store\\flux.js",["90"],"const getState = ({ getStore, setStore, getActions }) => {\r\n    return {\r\n        store: {\r\n            nombre: '',\r\n            tarea: '',\r\n            taskList: [],\r\n            setEdit: false,\r\n            currentTask: {},\r\n            workDone:[]\r\n        },\r\n        actions: {\r\n            handleName: (e) => {\r\n                setStore({ nombre: e.target.value })\r\n            },\r\n\r\n            handleTask: (e) => {\r\n                setStore({ tarea: e.target.value })\r\n            },\r\n\r\n            assignment: (e) => {\r\n                e.preventDefault()\r\n                const store = getStore()\r\n                if (store.setEdit) {\r\n                    const store = getStore()\r\n                    const newTasklist = store.taskList.map((item) => {\r\n                        if (item.id === store.currentTask.id) {\r\n                            const newTask = {\r\n                                id: store.currentTask.id,\r\n                                name: store.nombre,\r\n                                task: store.tarea,\r\n                                date: store.currentTask.date\r\n                            }\r\n                            return newTask\r\n                        } else {\r\n                            return item\r\n                        }\r\n                    })\r\n                    setStore({\r\n                        taskList: newTasklist,\r\n                        nombre: '',\r\n                        tarea: '',\r\n                        isEdit: false,\r\n                        currentTask: {}\r\n                    })\r\n                } else {\r\n                    const store = getStore()\r\n                    const id = new Date().getTime()\r\n                    const fecha = new Date()\r\n                    console.log(fecha)\r\n                    const newTask = {\r\n                        id: id,\r\n                        name: store.nombre,\r\n                        task: store.tarea,\r\n                        date: fecha.toString()\r\n                    }\r\n\r\n                    const todolist = store.taskList.concat(newTask)\r\n                    setStore({\r\n                        taskList: todolist,\r\n                        nombre: '',\r\n                        tarea: ''\r\n                    })\r\n                }\r\n            },\r\n            deleteTask: (item, isDone) => {\r\n                const store = getStore()\r\n                if (isDone === true) {\r\n                    const borrarTrabajo = store.taskList.filter((tarea) => {\r\n                        return tarea.id !== item.id\r\n                    })\r\n                    setStore({\r\n                        taskList: borrarTrabajo\r\n                    })\r\n                } else {\r\n                    const borrarTarea = store.taskList.filter((tarea) => {\r\n                        return tarea.id !== item.id\r\n                    })\r\n                    setStore({\r\n                        taskList: borrarTarea\r\n                    })\r\n                }\r\n            },\r\n\r\n\r\n            setEditTask: (task) => {\r\n                const store = getStore()\r\n                setStore({\r\n                    nombre: '',\r\n                    tarea: '',\r\n                    setEdit: true,\r\n                    currentTask: task\r\n                })\r\n            },\r\n\r\n            changelist: (item, isChange) => {\r\n                const store = getStore()\r\n                const actions=getActions()\r\n                if (isChange === true) {\r\n                    actions.deleteTask(item, true)\r\n                    const returnTask = store.taskList.concat(item)\r\n                    setStore({\r\n                        taskList:returnTask\r\n                    })\r\n                } else {\r\n                    actions.deleteTask(item, false)\r\n                    const newdone = store.workDone.concat(item)\r\n                    setStore({\r\n                        workDone:newdone\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default getState","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\index.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-m.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-contextApi\\todolist-task.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\indexmf.js",["91"],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\login.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\navbar.js",[],"C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\task.js",["92"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Task(props) {\r\n\r\n    const { handleTask, handleName, name, task, handlesubmmit } = props\r\n    return (\r\n        <form onSubmit={handlesubmmit}>\r\n            <div>\r\n                <input required type=\"text\" className=\"form-control\" placeholder=\"Escribe tu usuario aquí\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" onChange={handleName} value={name} />\r\n                <input required type=\"text\" className=\"form-control\" placeholder=\"Escribe una tarea aquí\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" onChange={handleTask} value={task} />\r\n\r\n                <button type=\"submit\" className=\"button-add-ut btn btn-success\">Agregar</button>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Task","C:\\Users\\dougl\\OneDrive\\Documents\\Carpeta de estudio\\react-bootstrap\\todolist\\src\\todolist-fetch\\task-list.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":120,"column":17,"nodeType":"99","endLine":120,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":121,"column":17,"nodeType":"99","endLine":121,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":5,"column":11,"nodeType":"102","messageId":"103","endLine":5,"endColumn":18},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"100","severity":1,"message":"106","line":86,"column":23,"nodeType":"102","messageId":"103","endLine":86,"endColumn":28},{"ruleId":"100","severity":1,"message":"107","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"108","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["109"],["110"],"'store' is assigned a value but never used.","'Login' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]